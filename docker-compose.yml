# Docker Compose Files consist of services needed by application.
# Docker Compose version syntax used
version: "3.9"

services:
  scrum-api-app:
    env_file:
        - .env
    build:
      context: . # This means build our docker file in current directory
      args:
        - DEV=true # Configure docker-compose on build to install Dev Requirements
    ports:
      - "8000:8000" # maps port 8000 from local machine to port 8000 inside Docker container
    volumes:
      - ./app:/app # maps app directory from local machine to /app  inside Docker container
      - scrum-api-static-data:/vol/web
    command: > #command that is used to run the service
          sh -c "python manage.py wait_for_db &&
                 python manage.py migrate &&
                 python manage.py runserver 0.0.0.0:8000"
    environment:
      - STATIC_ROOT
      - MEDIA_ROOT
      - CORS_ALLOWED_ORIGINS
      - ALLOWED_HOSTS
      - DEBUG
      - SECRET_KEY
      - USE_SQLITE
      - DB_HOST=scrum-api-db
      - DB_NAME=scrumapidevdb
      - DB_PASS=scrumapichangeme
      - DB_USER=scrumapidevuser
      - EMAIL_HOST_USER=noreply.join@e-mail.de
      - EMAIL_HOST_PASSWORD
      - EMAIL_HOST=smtp.1und1.de
    depends_on:
      - scrum-api-db

  scrum-api-db:
    image: postgres:13-alpine
    volumes:
      - scrum-api-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=scrumapidevdb
      - POSTGRES_USER=scrumapidevuser
      - POSTGRES_PASSWORD=scrumapichangeme

volumes:
  scrum-api-db-data:
  scrum-api-static-data:
